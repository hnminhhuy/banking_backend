services:
  main:
    image: nhbank/main:18-alpine
    build:
      context: .
    command: >
      /bin/sh -c "npm install &&
                  npm run build &&
                  npm run migration:run &&
                  npm run start:dev"
    restart: on-failure
    ports:
      - '4000:3000'
    volumes:
      - ./:/var/www
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - .env
    depends_on:
      - postgres
      - another-main

  another-main:
    image: another-bank/main:18-alpine
    build:
      context: .
    command: >
      /bin/sh -c "npm install &&
                  npm run build &&
                  npm run migration:run &&
                  npm run start:dev"
    restart: on-failure
    ports:
      - '4001:3000'
    volumes:
      - ./:/var/www
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - .env.another-bank
    depends_on:
      - postgres

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: nhbank,pnbank
    ports:
      - '${PG_PORT}:5432'
    volumes:
      - ./multi_pg_databases:/docker-entrypoint-initdb.d
      - banking_postgres:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis
    restart: on-failure
    ports:
      - '${REDIS_PORT}:6379'
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
volumes:
  banking_postgres:
  redis_data:
